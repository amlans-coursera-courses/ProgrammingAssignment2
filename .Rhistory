c <- system.time(ls())
str(c)
c.Date
c.Date()
print(c)
c
system.time(readLines("http://www.linkedin.com"))
system.time(readLines("http://www.neustar.com"))
c <- system.time(readLines("http://www.neustar.com"))
c
library("bitops", lib.loc="/Users/achatter/Library/R/3.0/library")
detach("package:bitops", unload=TRUE)
library("class", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("httr", lib.loc="/Users/achatter/Library/R/3.0/library")
detach("package:class", unload=TRUE)
detach("package:httr", unload=TRUE)
env
library("swirl", lib.loc="/Users/achatter/Library/R/3.0/library")
detach("package:swirl", unload=TRUE)
demo()
is.things
is.things()
demo(package="base")
demo()
demo(package= .packages(all.available=TRUE))
demo(is.things)
demo(panel)
history
history()
?rnorm
args("rnorm")
rnorm
x <- factor(c("yes", "no", "yes"))
x
table(x)
unclass(x)
x <- factor(c("yes", "no", "yes"), levels=c("yes", "no"))
x
table(x)
unclass(x)
is.na(Nan)
is.na(nan)
is.na(NaN)
is.nan(NaN)
is.nan(NA)
is.na(NA)
x <- c(1, 2, NA, 10, 3)
is.na(x)
~is.na(x)
!is.na(x)
is.na(x)
is.nan(x)
x <- c(1, 2, NA, 10, 3, NaN)
is.nan(x)
is.na(x)
x <- data.frame(foo=1:4, bar=10:14)
x <- data.frame(foo=1:4, bar=10:13)
x
names(x)
names(x) <- c("foo", "bar", "norf", "dorf")
names(x) <- c("foo", "bar")
x
names(x) <- c("foos", "bars")
x
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
x
names(x)
x <- list(a=1, b=2, c=3)
x
x[1]
x$a
m <- matrix(1:4, nrow=2, ncol=2)
m
dimnames(m) <- list(c("a", "b"), c("c", "d"))
m
dimnames(m) <- list(c("a", "b", "c", "d"))
dimnames(m) <- c("a", "b", "c", "d")
dimnames(m) <- list(c("a", "b"), "c", "d"))
dimnames(m) <- list(c("a", "b"), c("c", "d"))
m
history
history()
exit
quit()
install.packages("KernSmooth")
library('KernSmooth')
library(swirl)
swirl
swirl()
install_from_swirl("Regression Models")
install_from_swirl("R Programming")
install_from_swirl("Data Analysis")
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Open Intro")
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[30000]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(data=1:20, nrow=4, ncol=5)
identical(my_matrix2, my_matrix)
identical(my_matrix, my_matrix2)
patients <- c("Bill, "Gina", "Kelly", "Sean")
patients <- vector(c("Bill, "Gina", "Kelly", "Sean"))
patients <- vector("Bill, "Gina", "Kelly", "Sean")
patients <- vector("Bill", "Gina", "Kelly", "Sean")
patients <- x("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
colnames()
?colnames
colnames(my_data, cnames)
colnames(my_data) <- cnames
my_data
quit()
setwd("~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2")
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
?solve
x <- 1:20
dim(x) <- c(4, 5)
x
solve(x)
x <- 1:16
dim(x) <- c(4, 4)
x
solve(x)
x <- matrix(1:16, ncol=4, nrow=4)
x
names(x) <- c("A", "B", "C", "D")
x
cnames(x) <- c("A", "B", "C", "D")
colnames(x) <- c("A", "B", "C", "D")
x
rownames(x) <- c("E", "F", "G", "H")
x
attributes(x)
x
attributes(x)
names(x) <- ""
x
attributes(x)
names(x) <- NULL
x
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
solve(x)
a <- solve.default(x, x)
a <- solve.default(x, ...)
a <- solve.default(x ...)
a <- solve.default(x, ...)
a <- solve.default(x)
solve(x)
x
x <- matrix(16:1, ncol=4, nrow=4)
x
solve(x)
x <- matrix(c(1, 2, 3, 6, 7, 8, 4, 5, 6), ncol=3, nrow=3)
solve(x)
x <- matrix(c(1, 2, -3, 6, 17, 8, 41, 51, 6), ncol=3, nrow=3)
solve(x)
x <- matrix(c(1, 2, -3, 6), ncol=2, nrow=2)
x
solve(x)
x <- matrix(c(4, 3, 3, 2), ncol=2, nrow=2)
solve(x)
x
x'
''
solve(x)
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
makeCacheMatrix(x)
cacheSolve(x)
x
attributes(x)
colnames(x) <- c("A", "B")
rownames(x) <- c("D", "E")
X
x
cacheSolve(x)
?solve
cacheSolve(x)
makeCacheMatrix(x)
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x)
x$
$
clear
a <- makeCacheMatrix(x)
a$get
a$getInverse
cacheSolve(a)
x <- makeCacheMatrix(x)
cacheSolve(x)
x
clear
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
x <- matrix(c(4, 3, 3, 2), ncol=2, nrow=2)
cacheSolve(makeCacheMatrix(x))
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(x))
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(x))
a <- (makeCacheMatrix(x)
)
cacheSolve(a)
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(a)
a <- makeCacheMatrix(x)
cacheSolve(a)
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(x)
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(x)
cacheSolve(a)
a <- makeCacheMatrix()
cacheSolve(a)
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(x)
cacheSolve(a)
source('~/Google Drive/Code/MOOC/coursera/Johns Hopkins/R/PA-2/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(x)
cacheSolve(a)
x
